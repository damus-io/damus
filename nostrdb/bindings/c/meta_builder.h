#ifndef META_BUILDER_H
#define META_BUILDER_H

/* Generated by flatcc 0.6.1 FlatBuffers schema compiler for C by dvide.com */

#ifndef META_READER_H
#include "meta_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

static const flatbuffers_voffset_t __NdbEventMeta_required[] = { 0 };
typedef flatbuffers_ref_t NdbEventMeta_ref_t;
static NdbEventMeta_ref_t NdbEventMeta_clone(flatbuffers_builder_t *B, NdbEventMeta_table_t t);
__flatbuffers_build_table(flatbuffers_, NdbEventMeta, 1)

#define __NdbEventMeta_formal_args , int32_t v0
#define __NdbEventMeta_call_args , v0
static inline NdbEventMeta_ref_t NdbEventMeta_create(flatbuffers_builder_t *B __NdbEventMeta_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, NdbEventMeta, NdbEventMeta_file_identifier, NdbEventMeta_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, NdbEventMeta_received_at, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), NdbEventMeta)

static inline NdbEventMeta_ref_t NdbEventMeta_create(flatbuffers_builder_t *B __NdbEventMeta_formal_args)
{
    if (NdbEventMeta_start(B)
        || NdbEventMeta_received_at_add(B, v0)) {
        return 0;
    }
    return NdbEventMeta_end(B);
}

static NdbEventMeta_ref_t NdbEventMeta_clone(flatbuffers_builder_t *B, NdbEventMeta_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (NdbEventMeta_start(B)
        || NdbEventMeta_received_at_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, NdbEventMeta_end(B));
}

#include "flatcc_epilogue.h"
#endif /* META_BUILDER_H */
